@model X.PagedList.IPagedList<App.Core.Entities.Mail>

@{
    ViewData["Title"] = "BandejaEntrada";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
    <!-- Estilos y scripts -->
</head>
<body>
    <h1 style="text-align:center;text-decoration:underline">Bandeja de Entrada</h1>

    <!-- Formulario de búsqueda -->
    <h3>Buscar Mail</h3>
    <form class="d-none d-md-inline-block form-inline ms-auto me-0 me-md-3 my-2 my-md-0" method="get" action="@Url.Action("BandejaDeEntrada", "Mail")">
        <div class="input-group">
            <input class="form-control" type="text" name="textToSearch" placeholder="Ingrese texto a buscar..." aria-label="Search for..." aria-describedby="btnNavbarSearch" />
            <button type="submit" class="btn btn-primary">Buscar</button>
        </div>
    </form>

    <hr />

    <!-- Tabla de correos -->
    <table class="table table-striped table-dark">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Remitente</th>
                <th scope="col">Asunto</th>
                <th scope="col">Contenido</th>
                <th scope="col">Fecha</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var mail in Model)
            {
                <tr>
                    <td>@mail.Id</td>
                    <td>@mail.Remitente_id</td>
                    <td>@mail.Asunto</td>
                    <td>@mail.Contenido</td>
                    <td>@mail.FechaEnvio</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Paginación -->
    <div class="pagination-container">
        <div class="pagination">
            Página @(Model.PageNumber) de @(Model.PageCount)
        </div>
        <div class="pagination">
            @if (Model.HasPreviousPage)
            {
                <a href="@Url.Action("BandejaDeEntrada", new { page = Model.PageNumber - 1, textToSearch = ViewContext.HttpContext.Request.Query["textToSearch"] })">Anterior</a>
            }

            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <a href="@Url.Action("BandejaDeEntrada", new { page = i, textToSearch = ViewContext.HttpContext.Request.Query["textToSearch"] })" class="@(i == Model.PageNumber ? "active" : "")">@i</a>
            }

            @if (Model.HasNextPage)
            {
                <a href="@Url.Action("BandejaDeEntrada", new { page = Model.PageNumber + 1, textToSearch = ViewContext.HttpContext.Request.Query["textToSearch"] })">Siguiente</a>
            }
        </div>
    </div>

    <!-- Scripts y cierre del body y html -->
</body>
</html>